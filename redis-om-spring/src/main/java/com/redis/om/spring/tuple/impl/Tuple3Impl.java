
package com.redis.om.spring.tuple.impl;

import com.redis.om.spring.tuple.Tuple;
import com.redis.om.spring.tuple.AbstractTuple;
import com.redis.om.spring.tuple.Triple;

/**
 * An implementation class of a {@link Triple}.
 * <p>
 * Generated by com.speedment.sources.pattern.tuple.TupleImplPattern
 *
 * @param <T0> type of element 0
 * @param <T1> type of element 1
 * @param <T2> type of element 2
 */
public final class Tuple3Impl<T0, T1, T2>
extends AbstractTuple
implements Triple<T0, T1, T2> {

    /**
     * Constructs a {@link Tuple} of type {@link Triple}.
     *
     * @param e0 element 0
     * @param e1 element 1
     * @param e2 element 2
     */
    public Tuple3Impl(
            T0 e0,
            T1 e1,
            T2 e2) {
        super(Tuple3Impl.class, e0, e1, e2);
    }

    @SuppressWarnings("unchecked")
    @Override
    public T0 getFirst() {
        return ((T0) values[0]);
    }

    @SuppressWarnings("unchecked")
    @Override
    public T1 getSecond() {
        return ((T1) values[1]);
    }

    @SuppressWarnings("unchecked")
    @Override
    public T2 getThird() {
        return ((T2) values[2]);
    }
}